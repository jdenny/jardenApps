Current actions *************************************************
Lysine is currently specific to Divide Cell; needs to be generalised

CellFood creates an extra Adenine, to show how many
times a cell has been fed.
But Cell does same thing will Alenine, and the numbers are different!
Where do the extra Uracils come from?

could 2 threads be accessing the same regulator? if so this will cause a
problem as geneIndex will be corrupted!

move divideCell into Cell; run it in its own new thread, so that it
doesn't need to worry about stopping itself

change DNA to use Codons instead of Nucleotides directly? write test
for methods used by copy DNA; not sure if this is a good idea; we'll
know when we've done polymerase

once we've removed pseudo amino acids, extend matchCodon to include
 alternative mappings

tidy up documentation so far, and write report on work so far

check locks & conditions and Thread.isInterrupted()

convert killCell to protein; cell maintain list of cells to be killed

End of current actions *****************************************

Next Steps
	optionally make colours sliding scale
	http://stackoverflow.com/questions/340209/generate-colors-between-red-and-green-for-a-power-meter

investigate warnings in code
improve protein status
make sure TestCell and MasterDesigner still work

Create nucleicAcid and aminoAcid from more basic raw materials,
instead of from existing cells; in programming terms, an aminoAcid
is a bit of code! where does that come from?

Complete Actions *************************************
replace FindNextGene, GetRNAFromGene with Polymerase - DONE

remove all synchronized - DONE

in DivideCell, signal needMoreProteins if ct < 2 * geneCt - DONE

similarly if rnaCt < geneCt, notify needMoreRna - DONE

follow pattern in javadoc of interface
 java.util.concurrent.locks.Condition - DONE

similarly signal needMoreFood - DONE

static counts for proteins, aminoAcids and RNA and nucleotides need to be
non-static, as each cell could have different DNA! - DONE

pass on targets in DivideCell - DONE

is there an inconsistency, in that Cell applies the locks & conditions for
get<resource>, but the amino acids do it for put<resource>? - NO

remove onCellChanged(Cell cell); - DONE

remove cell listener - DONE

remove Cell.active - DONE

for each Condition, have corresponding boolean method, e.g. - DONE
	private Condition cellReadyToDivide;
	public boolean isCellReadyToDivide() {
		return proteinList.size() > (geneSize * 2);
	}

replace AminoAcid method: Object action(Object object)
with: CellResource action(CellResource resource)     - DONE

add boolean startLife to CellEnvironment; if true add syntheticCell - DONE

use Thread pool - DONE

CellListener: notification that there are new or newly dead cells; LifeFX then
pulls the list back if it wants - DONE

clients get all data using pull from CellEnvironment instead of push;
ideally clients get cellData, rather than cells - DONE

make DNA double strand: template for RNA and complementing strand - DONE

feedbackLoop is allowing multiples of one DNA and none of another; ditto proteins
a class (that later should become a protein!) that keeps track of each gene:
	int dnaIndex; // dna never changes within a cell, only producing new cell
	int targetCt; // target number of proteins to be built
	int actualCt;
during protein creation, increment actualCt; during split, decrement actualCt;
polymerase waits for needDNA
this supercedes the current DNA feedback loop - DONE

calculate geneSize from DNA (which may change) rather than from - DONE
 static geneStrs.length (which doesn't, and isn't even calculated for
 daughter cells!)

in LifeFX, show list of RNA strands - DONE

remove proteinListLock; use regulatorListLock instead - DONE

check-out if we need Thread.isInterrupted() - YES

factor out our first reusable aminoAcid: GetResource - DONE

make synthetic cell out of DNA - DONE

As part of the DNA, specify how many instances of a protein need to run - DONE
remove Cell.isDivideCellRunning and AminoAcid.activateOnCreate()

CellEnvironment: add dead cells to foodList - DONE

could the protein name be replaced by its RNA gene, without the stop,
 as a string? - DONE

aminoAcidFeed targets, done like nucleotides       - DONE
add aminoAcidActuals, similar to nucleotideActuals
decided to simplify the whole thing; see Feeding in design.txt

Ribosome
	RNA rna = cell.waitForRNA()              - DONE
	AminoAcid = cell.waitForAminoAcid(codon) - DONE
Polymerase
	Regulator regulator = cell.waitForRnaBelowTarget()  - DONE
	Nucleotide first = cell.waitForNucleotide(dna.getFromTemplate(i), false)
WaitForEnoughProteins - DONE
	[potentially: boolean readyToDivide = cell.waitForCellReadyToDivide()
CopyDNA
	Nucleotide nucleotideCopy = cell.waitForNucleotide(nucleotide, true)
DigestFood
	Food food = cell.waitForFood()      - DONE
EatFood
	Food food = cellEnvironment.waitForFood() - DONE

Protein.action() processes amino acids every time the protein is run,
but this is overkill; should build body lists once; Serine then takes
them off the list of lists once; code AAs should all be put into
a list; once this "precompile" is complete, just the codeList needs
to be actioned - DONE

report exceptions thrown in thread pools; will need this, not just for - DONE
debugging, but also to see how well fare cells with different DNA

make food into a chainResource? does this fit with the spirit of the design?
seeing as food is inert, can it have methods? - DONE
